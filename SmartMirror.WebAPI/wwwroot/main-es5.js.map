{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/section-profile/section-profile.component.ts","webpack:///src/app/section-profile/section-profile.component.html","webpack:///src/app/server/server.component.ts","webpack:///src/app/server/server.component.html","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///src/app/system-widgets/system-widgets.component.ts","webpack:///src/app/system-widgets/system-widgets.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/routes.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","NavbarComponent","SectionProfileComponent","ServerComponent","setServerStatus","serverInput","isOnline","color","buttonText","onlineStatus","console","log","name","toggleStatus","SidebarComponent","SAMPLE_SERVERS","SystemWidgetsComponent","servers","environment","production","bootstrapModule","catch","err","error","appRoutes","path","component","redirectTo","pathMatch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ang-dev';\n}\n","<app-navbar id=\"navbar\"\r\n            class=\"navbar navbar-dark fixed-top bg-dark\"></app-navbar>\r\n\r\n<div class=\"container-fluid\">\r\n  <div class=\"row\" id=\"mainContent\">\r\n    <app-sidebar id=\"sideBar\"\r\n                 class=\"col-sm-3 col-md-2 d-none d-sm-block sidebar\"></app-sidebar>\r\n\r\n    <div class=\"col-sm-9 ml-sm-auto col.md-10 pt-3\" id=\"dashboard\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from '../routes';\n\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { SectionProfileComponent } from './section-profile/section-profile.component';\nimport { SystemWidgetsComponent } from './system-widgets/system-widgets.component';\nimport { ServerComponent } from './server/server.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SidebarComponent,\n    SectionProfileComponent,\n    SystemWidgetsComponent,\n    ServerComponent\n  ],\n  imports: [\n      BrowserModule,\n      RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<a class=\"navbar-brand\" href=\"#\">\r\n  <span class=\"logo logo-left\">\r\n    smart\r\n  </span>\r\n  <span class=\"logo logo-right\">\r\n    Mirror\r\n  </span>\r\n</a>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Widget } from '../models/widget';\n\n@Component({\n  selector: 'app-section-profile',\n  templateUrl: './section-profile.component.html',\n  styleUrls: ['./section-profile.component.css']\n})\nexport class SectionProfileComponent implements OnInit {\n\n    constructor() { }\n\n    widgets: Widget[];\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section-container\">\r\n  <h2>\r\n    Latest Updates\r\n  </h2>\r\n  <table class=\"table table-inverse table-hover\">\r\n    <thead class=\"thead-dark\">\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Name</th>\r\n        <th>Widget</th>\r\n        <th>Service</th>\r\n        <th>Status</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let widget of widgets\">\r\n        <td>{{ widget.id }}</td>\r\n        <td>{{ widget.name}}</td>\r\n        <td>{{ widget.data }}</td>\r\n        <td>{{ widget.version }}</td>\r\n        <td>Status</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Server } from '../models/server';\n\n@Component({\n  selector: 'app-server',\n  templateUrl: './server.component.html',\n  styleUrls: ['./server.component.css']\n})\nexport class ServerComponent implements OnInit {\n\n    constructor() { }\n\n    color: string;\n    buttonText: string;\n\n    @Input() serverInput: Server;\n\n    ngOnInit(): void {\n        this.setServerStatus(this.serverInput.isOnline);\n    }\n\n    setServerStatus(isOnline: boolean) {\n        if (isOnline) {\r\n            this.serverInput.isOnline = true;\r\n            this.color = '#66BB6A';\r\n            this.buttonText = 'Deactivate';\r\n        }\r\n        else {\r\n            this.serverInput.isOnline = false;\r\n            this.color = '#FF6B6B';\r\n            this.buttonText = 'Activate';\r\n        }\r\n    }\n\n    toggleStatus(onlineStatus: boolean) {\n        console.log(this.serverInput.name, ':', onlineStatus);\r\n        this.setServerStatus(!onlineStatus);\r\n    }\n}\n","<div class=\"card mb-3 shadow block-status\" [ngStyle]=\"{'background-color': color}\">\r\n  <div class=\"card-header name\">\r\n    {{ serverInput.name }}\r\n  </div>\r\n  <div class=\"card-body status\">\r\n    {{ serverInput.isOnline }}\r\n  </div>\r\n  <button (click)=\"toggleStatus(serverInput.isOnline)\" class=\"btn btn-default action\">{{ buttonText }}</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<ul class=\"nav nav-pills flex-column\">\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" routerLink=\"/profile\">Profile Settings</a>\r\n  </li>\r\n  <li class=\"nav-item\">\r\n    <a class=\"nav-link\" routerLink=\"/widgets\">System Widgets</a>\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Server } from '../models/server';\n\nconst SAMPLE_SERVERS = [\n    { id: 1, name: 'todoist-app', isOnline: true },\n    { id: 2, name: 'google-calendar', isOnline: true },\n    { id: 3, name: 'google-mail', isOnline: false },\n    { id: 4, name: 'medium-newsletter', isOnline: true },\n];\n\n@Component({\n  selector: 'app-system-widgets',\n  templateUrl: './system-widgets.component.html',\n  styleUrls: ['./system-widgets.component.css']\n})\nexport class SystemWidgetsComponent implements OnInit {\n\n    constructor() { }\n\n    servers: Server[] = SAMPLE_SERVERS;\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"section-container\">\r\n  <h2>System Health</h2>\r\n  <div class=\"card-deck servers\">\r\n    <div *ngFor=\"let server of servers\">\r\n      <app-server [serverInput]=\"server\"></app-server>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Routes } from '@angular/router';\r\nimport { SectionProfileComponent } from './app/section-profile/section-profile.component';\r\nimport { SystemWidgetsComponent } from './app/system-widgets/system-widgets.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    { path: 'profile', component: SectionProfileComponent },\r\n    { path: 'widgets', component: SystemWidgetsComponent },\r\n\r\n    { path: '', redirectTo:'/profile', pathMatch: 'full' },\r\n];\r\n"]}